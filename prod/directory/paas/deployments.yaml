apiVersion: apps/v1
kind: Deployment
metadata:
  name: image
  namespace: paas
spec:
  replicas: 1 
  selector:
    matchLabels:
      app: image
  template: 
    metadata:
      labels:
        app: image
    spec:
      containers:
      - name: profile-image
        image: digitalcollab/profile-image:latest
        ports:
        - containerPort: 80
        env:
        - name: "TITLE"
          value: "OADW-Image-Server"
        - name: "DOMAIN"
          value: "https://avatar.gccollab.ca"
        - name: "MASTERDELETECODE"
          valueFrom:
            secretKeyRef:
              name: image-env
              key: DELETE_CODE
        - name: "LOWPROFILE"
          value: "True"
        resources:
          requests:
            memory: "128Mi"
            cpu: "0.05"
        volumeMounts:
        - mountPath: /usr/share/nginx/html/upload
          name: image-data-volume
      volumes:
      - name: image-data-volume
        persistentVolumeClaim:
          claimName: image-data-volume-claim
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: profile-apollo
  namespace: paas
spec:
  replicas: 1 
  selector:
    matchLabels:
      app: profile-apollo
  template: 
    metadata:
      labels:
        app: profile-apollo
    spec:
      containers:
      - name: apollo
        image: digitalcollab/profile-apollo:latest
        ports:
        - containerPort: 4000
        env:
        - name: "NODE_ENV"
          value: "production"
        - name: "PRISMA_API_ENDPOINT"
          value: "prismagraphql"
        - name: "PRISMA_HOST"
          value: "prismagraphql"
        - name: "account_url"
          value: "https://account.gccollab.ca"
        - name: "client_id"
          valueFrom:
            secretKeyRef:
              name: apollo-env
              key: client_id
        - name: "client_secret"
          valueFrom:
            secretKeyRef:
              name: apollo-env
              key: client_secret
        - name: "MQ_HOST"
          value: "rabbitmq.rabbitmq"
        - name: "MQ_USER"
          valueFrom:
            secretKeyRef:
              name: apollo-env
              key: MQ_USER
        - name: "MQ_PASS"
          valueFrom:
            secretKeyRef:
              name: apollo-env
              key: MQ_PASS
        - name: "ELASTIC_HOST"
          value: "http://elasticsearch-master.search"
        - name: "IMAGE_URL"
          value: "https://avatar.gccollab.ca"
        - name: "MASTERDELETECODE"
          valueFrom:
            secretKeyRef:
              name: image-env
              key: DELETE_CODE
        - name: "scope"
          value: "token_introspection"
        - name: "directory_app"
          value: "https://profile.gccollab.ca"
        readinessProbe:
          httpGet:
            path: /.well-known/apollo/server-health
            port: 4000
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /.well-known/apollo/server-health
            port: 4000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        resources:
          requests:
            memory: "256Mi"
            cpu: "0.1"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prismagraphql
  namespace: paas
spec:
  replicas: 1 
  selector:
    matchLabels:
      app: prismagraphql
  template: 
    metadata:
      labels:
        app: prismagraphql
    spec:
      containers:
      - name: prisma
        image: prismagraphql/prisma:1.26
        ports:
        - containerPort: 4466
        env:
        - name: "PRISMA_CONFIG"
          valueFrom:
            secretKeyRef:
              name: prisma-env
              key: PRISMA_CONFIG
        resources:
          requests:
            memory: "256Mi"
            cpu: "0.1"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: paas
spec:
  replicas: 1 
  selector:
    matchLabels:
      app: postgres
  template: 
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:10.6
        ports:
        - containerPort: 5432
        env:
        - name: "POSTGRES_USER"
          valueFrom:
            secretKeyRef:
              name: postgres-env
              key: POSTGRES_USER
        - name: "POSTGRES_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: postgres-env
              key: POSTGRES_PASSWORD
        resources:
          requests:
            memory: "256Mi"
            cpu: "0.1"
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          subPath: postgresql-db
          name: postgres-volume
      volumes:
      - name: postgres-volume
        azureDisk:
          kind: Managed
          diskName: profileDBVolume
          diskURI: /subscriptions/{sub-id}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/disks/profileDBVolume
