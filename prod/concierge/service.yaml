apiVersion: v1
kind: Service
metadata:
  name: account
  namespace: account
spec:
  ports:
    - protocol: TCP
      port: 8000
  selector: 
    app: account
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: account-deployment
  namespace: account
spec:
  replicas: 2
  selector:
    matchLabels:
      app: account
  template: # create pods using pod definition in this template
    metadata:
      labels:
        app: account
    spec:
      containers:
      - name: account
        image: phanoix/concierge@sha256:4f90be8c726ae083bfa771df8daec37a070b9091dc6ca8c4880051f3169af632
        ports:
        - containerPort: 8000
        env:
        - name: "DEBUG"
          value: "False"
        - name: "CONCIERGE_ALLOWED_HOSTS"
          value: '[''account.gccollab.ca'']'
        - name: "CONCIERGE_SECRET_KEY"
          valueFrom:
            secretKeyRef:
              name: account-env
              key: secret-key
        - name: "CONCIERGE_DATABASE_URL"
          valueFrom:
            secretKeyRef:
              name: account-env
              key: db-url
        - name: "EMAIL_USE_TLS"
          value: "True"
        - name: "SITE_URL"
          value: "https://account.gccollab.ca"
        resources:
          requests:
            memory: "128Mi"
            cpu: "0.05"
          limits:
            memory: "256Mi"
            cpu: "0.25"
        volumeMounts:
        - mountPath: /app/media
          name: account-data-volume
      volumes:
      - name: account-data-volume
        persistentVolumeClaim:
          claimName: account-data-volume-claim
---
apiVersion: v1
kind: Service
metadata:
  name: account-db
  namespace: account
spec:
  clusterIP: None
  ports: 
    - protocol: TCP
      port: 5432
  selector:
    app: account-db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: account-db-deployment
  namespace: account
spec:
  replicas: 1 # tells deployment to run 1 pod matching the template
  selector:
    matchLabels:
      app: account-db
  template: # create pods using pod definition in this template
    metadata:
      labels:
        app: account-db
    spec:
      containers:
      - name: postgres
        image: postgres:10
        ports:
        - containerPort: 5432
        resources:
          requests:
            memory: "256Mi"
            cpu: "0.05"
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          subPath: postgresql-db
          name: account-db-volume
      volumes:
      - name: account-db-volume
        azureDisk:
          kind: Managed
          diskName: accountDBVolume
          diskURI: /subscriptions/{sub-id}/resourcegroups/MC_AKS-Prod_CollabAKSProd_canadaeast/providers/microsoft.compute/disks/accountDBVolume

