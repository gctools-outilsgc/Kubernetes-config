apiVersion: v1
kind: Service
metadata:
  name: account
  namespace: dev-account
spec:
  ports:
    - protocol: TCP
      port: 8000
      name: http
  selector: 
    app: account
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: account-deployment
  namespace: dev-account
spec:
  replicas: 1
  template: # create pods using pod definition in this template
    metadata:
      labels:
        app: account
        version: v1
    spec:
      containers:
      - name: account
        image: phanoix/concierge:latest
        ports:
        - containerPort: 8000
        env:
        - name: "DEBUG"
          value: "True"
        - name: "CONCIERGE_ALLOWED_HOST"
          value: "*"
        - name: "CONCIERGE_SECRET_KEY"
          value: "qWxPJrZCLeHZraNTWjEKHdJJxJyho8"
        - name: "CONCIERGE_DATABASE_URL"
          value: "postgres://postgres:postgres@account-db:5432/postgres"
        - name: "SEND_SUSPICIOUS_BEHAVIOR_WARNINGS"
          value: "True"
        - name: "DB_HOST"
          value: "account-db"
        - name: "DB_USER"
          value: "postgres"
        - name: "DB_PASSWORD"
          value: "postgres"
        livenessProbe:
          httpGet:
            path: /login
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 3
          timeoutSeconds: 1
          failureThreshold: 3
        volumeMounts:
        - mountPath: /app/media
          name: account-data-volume
      volumes:
      - name: account-data-volume
        persistentVolumeClaim:
          claimName: dev-account-data-volume-claim
---
# postgres
apiVersion: v1
kind: Service
metadata:
  name: account-db
  namespace: dev-account
spec:
  clusterIP: None
  ports: 
    - protocol: TCP
      port: 5432
      name: postgres
  selector:
    app: account-db
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: account-db-deployment
  namespace: dev-account
spec:
  replicas: 1 # tells deployment to run 1 pod matching the template
  template: # create pods using pod definition in this template
    metadata:
      labels:
        app: account-db
        version: v10
    spec:
      containers:
      - name: postgres
        image: postgres:10
        ports:
        - containerPort: 5432
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          subPath: postgresql-db
          name: account-db-volume
      volumes:
      - name: account-db-volume
        persistentVolumeClaim:
          claimName: dev-account-db-volume
---
# redis
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: dev-account
spec:
  clusterIP: None
  ports: 
    - protocol: TCP
      port: 6379
      name: redis
  selector:
    app: account-redis
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: redis-deployment
  namespace: dev-account
spec:
  replicas: 1 # tells deployment to run 1 pod matching the template
  template: # create pods using pod definition in this template
    metadata:
      labels:
        app: account-redis
        version: v1
    spec:
      containers:
      - name: redis
        image: redis:alpine
        ports:
        - containerPort: 6379
